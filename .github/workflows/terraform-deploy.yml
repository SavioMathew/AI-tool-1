name: Terraform CI/CD with GitHub Actions
on:
  push:
    branches:
      - main
  pull_request:
      branches:
         - main
jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: AKIA4MTWHF2TUKSFC254
      AWS_SECRET_ACCESS_KEY: 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
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          
      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color > plan.txt

      - name: AI Review Terraform Plan
        if: env.OPENAI_API_KEY != ''
        run: |
          echo "### Sending Terraform plan to GPT-5 for review..."
          RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -d '{
              "model": "gpt-5",
              "messages": [
                {"role": "system", "content": "You are a DevOps expert reviewing Terraform for AWS."},
                {"role": "user", "content": "Review this Terraform plan for security, permissions, and cost issues:\n'"$(cat plan.txt | sed 's/"/\\"/g')"'."}
              ]
            }' | jq -r '.choices[0].message.content')

            echo "AI Review Result:"
            echo "$RESPONSE"
            echo "ai_review=$RESPONSE" >> $GITHUB_ENV
   
      - name: Terraform Appy
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
    
            
        
      
